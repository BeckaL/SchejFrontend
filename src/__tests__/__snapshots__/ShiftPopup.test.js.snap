// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Shift Popup it matches the snapshot 1`] = `
ReactWrapper {
  Symbol(enzyme.__unrendered__): <ShiftPopup
    shiftInfo={
      Object {
        "end": Object {
          "toLocaleString": [Function],
        },
        "start": Object {
          "toLocaleString": [Function],
        },
        "userId": 1,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": ShiftPopup {
      "_reactInternalFiber": FiberNode {
        "_debugID": 50,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugID": 49,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "shiftInfo": Object {
                "end": Object {
                  "toLocaleString": [Function],
                },
                "start": Object {
                  "toLocaleString": [Function],
                },
                "userId": 1,
              },
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "shiftInfo": Object {
                "end": Object {
                  "toLocaleString": [Function],
                },
                "start": Object {
                  "toLocaleString": [Function],
                },
                "userId": 1,
              },
            },
          },
          "mode": 0,
          "nextEffect": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 1073741823,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    id="shift-popup"
                  >
                    <h3
                      class="popup-title"
                    >
                      Shift Information
                    </h3>
                    <br />
                    <div
                      class="shift-info"
                    >
                      <p
                        class="shift-info-label"
                      >
                        Employee name:
                      </p>
                      <p
                        class="shift-info-entry"
                      />
                    </div>
                    <br />
                    <div
                      class="shift-info"
                    >
                      <p
                        class="shift-info-label"
                      >
                        Contact email address:
                      </p>
                      <p
                        class="shift-info-entry"
                      />
                    </div>
                    <br />
                    <div
                      class="shift-info"
                    >
                      <p
                        class="shift-info-label"
                      >
                        Start time:
                      </p>
                      <p
                        class="shift-info-entry"
                      />
                    </div>
                    <br />
                    <div
                      class="shift-info"
                    >
                      <p
                        class="shift-info-label"
                      >
                        End time:
                      </p>
                      <p
                        class="shift-info-entry"
                      />
                    </div>
                    <br />
                    <section
                      id="toggle-popup-state"
                    >
                      <button
                        class="custom-button"
                        id="toggle-popup-content"
                      >
                        Request shift swap
                      </button>
                      <button
                        class="custom-button"
                        id="toggle-emergency-popup-content"
                      >
                        Request emergency cover
                      </button>
                    </section>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "shiftInfo": Object {
                            "end": Object {
                              "toLocaleString": [Function],
                            },
                            "start": Object {
                              "toLocaleString": [Function],
                            },
                            "userId": 1,
                          },
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "shiftInfo": Object {
                            "end": Object {
                              "toLocaleString": [Function],
                            },
                            "start": Object {
                              "toLocaleString": [Function],
                            },
                            "userId": 1,
                          },
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "shiftInfo": Object {
                      "end": Object {
                        "toLocaleString": [Function],
                      },
                      "start": Object {
                        "toLocaleString": [Function],
                      },
                      "userId": 1,
                    },
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  id="shift-popup"
                >
                  <h3
                    class="popup-title"
                  >
                    Shift Information
                  </h3>
                  <br />
                  <div
                    class="shift-info"
                  >
                    <p
                      class="shift-info-label"
                    >
                      Employee name:
                    </p>
                    <p
                      class="shift-info-entry"
                    />
                  </div>
                  <br />
                  <div
                    class="shift-info"
                  >
                    <p
                      class="shift-info-label"
                    >
                      Contact email address:
                    </p>
                    <p
                      class="shift-info-entry"
                    />
                  </div>
                  <br />
                  <div
                    class="shift-info"
                  >
                    <p
                      class="shift-info-label"
                    >
                      Start time:
                    </p>
                    <p
                      class="shift-info-entry"
                    />
                  </div>
                  <br />
                  <div
                    class="shift-info"
                  >
                    <p
                      class="shift-info-label"
                    >
                      End time:
                    </p>
                    <p
                      class="shift-info-entry"
                    />
                  </div>
                  <br />
                  <section
                    id="toggle-popup-state"
                  >
                    <button
                      class="custom-button"
                      id="toggle-popup-content"
                    >
                      Request shift swap
                    </button>
                    <button
                      class="custom-button"
                      id="toggle-emergency-popup-content"
                    >
                      Request emergency cover
                    </button>
                  </section>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "shiftInfo": Object {
                        "end": Object {
                          "toLocaleString": [Function],
                        },
                        "start": Object {
                          "toLocaleString": [Function],
                        },
                        "userId": 1,
                      },
                    }
                  }
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "shiftInfo": Object {
                "end": Object {
                  "toLocaleString": [Function],
                },
                "start": Object {
                  "toLocaleString": [Function],
                },
                "userId": 1,
              },
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 1073741823,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    id="shift-popup"
                  >
                    <h3
                      class="popup-title"
                    >
                      Shift Information
                    </h3>
                    <br />
                    <div
                      class="shift-info"
                    >
                      <p
                        class="shift-info-label"
                      >
                        Employee name:
                      </p>
                      <p
                        class="shift-info-entry"
                      />
                    </div>
                    <br />
                    <div
                      class="shift-info"
                    >
                      <p
                        class="shift-info-label"
                      >
                        Contact email address:
                      </p>
                      <p
                        class="shift-info-entry"
                      />
                    </div>
                    <br />
                    <div
                      class="shift-info"
                    >
                      <p
                        class="shift-info-label"
                      >
                        Start time:
                      </p>
                      <p
                        class="shift-info-entry"
                      />
                    </div>
                    <br />
                    <div
                      class="shift-info"
                    >
                      <p
                        class="shift-info-label"
                      >
                        End time:
                      </p>
                      <p
                        class="shift-info-entry"
                      />
                    </div>
                    <br />
                    <section
                      id="toggle-popup-state"
                    >
                      <button
                        class="custom-button"
                        id="toggle-popup-content"
                      >
                        Request shift swap
                      </button>
                      <button
                        class="custom-button"
                        id="toggle-emergency-popup-content"
                      >
                        Request emergency cover
                      </button>
                    </section>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "shiftInfo": Object {
                            "end": Object {
                              "toLocaleString": [Function],
                            },
                            "start": Object {
                              "toLocaleString": [Function],
                            },
                            "userId": 1,
                          },
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "shiftInfo": Object {
                            "end": Object {
                              "toLocaleString": [Function],
                            },
                            "start": Object {
                              "toLocaleString": [Function],
                            },
                            "userId": 1,
                          },
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "shiftInfo": Object {
                      "end": Object {
                        "toLocaleString": [Function],
                      },
                      "start": Object {
                        "toLocaleString": [Function],
                      },
                      "userId": 1,
                    },
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  id="shift-popup"
                >
                  <h3
                    class="popup-title"
                  >
                    Shift Information
                  </h3>
                  <br />
                  <div
                    class="shift-info"
                  >
                    <p
                      class="shift-info-label"
                    >
                      Employee name:
                    </p>
                    <p
                      class="shift-info-entry"
                    />
                  </div>
                  <br />
                  <div
                    class="shift-info"
                  >
                    <p
                      class="shift-info-label"
                    >
                      Contact email address:
                    </p>
                    <p
                      class="shift-info-entry"
                    />
                  </div>
                  <br />
                  <div
                    class="shift-info"
                  >
                    <p
                      class="shift-info-label"
                    >
                      Start time:
                    </p>
                    <p
                      class="shift-info-entry"
                    />
                  </div>
                  <br />
                  <div
                    class="shift-info"
                  >
                    <p
                      class="shift-info-label"
                    >
                      End time:
                    </p>
                    <p
                      class="shift-info-entry"
                    />
                  </div>
                  <br />
                  <section
                    id="toggle-popup-state"
                  >
                    <button
                      class="custom-button"
                      id="toggle-popup-content"
                    >
                      Request shift swap
                    </button>
                    <button
                      class="custom-button"
                      id="toggle-emergency-popup-content"
                    >
                      Request emergency cover
                    </button>
                  </section>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "shiftInfo": Object {
                        "end": Object {
                          "toLocaleString": [Function],
                        },
                        "start": Object {
                          "toLocaleString": [Function],
                        },
                        "userId": 1,
                      },
                    }
                  }
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "shiftInfo": Object {
                  "end": Object {
                    "toLocaleString": [Function],
                  },
                  "start": Object {
                    "toLocaleString": [Function],
                  },
                  "userId": 1,
                },
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "shiftInfo": Object {
                  "end": Object {
                    "toLocaleString": [Function],
                  },
                  "start": Object {
                    "toLocaleString": [Function],
                  },
                  "userId": 1,
                },
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": FiberNode {
          "_debugID": 51,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": Object {
            "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
            "lineNumber": 66,
          },
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 52,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
              "lineNumber": 67,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": null,
            "childExpirationTime": 0,
            "effectTag": 0,
            "elementType": "h3",
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": "Shift Information",
              "className": "popup-title",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": "Shift Information",
              "className": "popup-title",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": FiberNode {
              "_debugID": 53,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                "lineNumber": 68,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": "br",
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 1,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {},
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {},
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": FiberNode {
                "_debugID": 54,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                  "lineNumber": 69,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 63,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                    "lineNumber": 70,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": "p",
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Employee name:",
                    "className": "shift-info-label",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Employee name:",
                    "className": "shift-info-label",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 64,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                      "lineNumber": 71,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": "p",
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": undefined,
                      "className": "shift-info-entry",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": undefined,
                      "className": "shift-info-entry",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <p
                      class="shift-info-entry"
                    />,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "p",
                    "updateQueue": null,
                  },
                  "stateNode": <p
                    class="shift-info-label"
                  >
                    Employee name:
                  </p>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "p",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": "div",
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 2,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <p
                      className="shift-info-label"
                    >
                      Employee name:
                    </p>,
                    <p
                      className="shift-info-entry"
                    />,
                  ],
                  "className": "shift-info",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <p
                      className="shift-info-label"
                    >
                      Employee name:
                    </p>,
                    <p
                      className="shift-info-entry"
                    />,
                  ],
                  "className": "shift-info",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": FiberNode {
                  "_debugID": 55,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                    "lineNumber": 73,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": "br",
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 3,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {},
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {},
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 56,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                      "lineNumber": 74,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 65,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                        "lineNumber": 75,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": "p",
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Contact email address:",
                        "className": "shift-info-label",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "Contact email address:",
                        "className": "shift-info-label",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 66,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                          "lineNumber": 76,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": "p",
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": undefined,
                          "className": "shift-info-entry",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": undefined,
                          "className": "shift-info-entry",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <p
                          class="shift-info-entry"
                        />,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "p",
                        "updateQueue": null,
                      },
                      "stateNode": <p
                        class="shift-info-label"
                      >
                        Contact email address:
                      </p>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "p",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 4,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <p
                          className="shift-info-label"
                        >
                          Contact email address:
                        </p>,
                        <p
                          className="shift-info-entry"
                        />,
                      ],
                      "className": "shift-info",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <p
                          className="shift-info-label"
                        >
                          Contact email address:
                        </p>,
                        <p
                          className="shift-info-entry"
                        />,
                      ],
                      "className": "shift-info",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 57,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                        "lineNumber": 78,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": "br",
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 5,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {},
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {},
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 58,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                          "lineNumber": 79,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 67,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                            "lineNumber": 80,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": "p",
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Start time:",
                            "className": "shift-info-label",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "Start time:",
                            "className": "shift-info-label",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 68,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                              "lineNumber": 81,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "elementType": "p",
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": undefined,
                              "className": "shift-info-entry",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": undefined,
                              "className": "shift-info-entry",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <p
                              class="shift-info-entry"
                            />,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "p",
                            "updateQueue": null,
                          },
                          "stateNode": <p
                            class="shift-info-label"
                          >
                            Start time:
                          </p>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "p",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 6,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <p
                              className="shift-info-label"
                            >
                              Start time:
                            </p>,
                            <p
                              className="shift-info-entry"
                            />,
                          ],
                          "className": "shift-info",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <p
                              className="shift-info-label"
                            >
                              Start time:
                            </p>,
                            <p
                              className="shift-info-entry"
                            />,
                          ],
                          "className": "shift-info",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 59,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                            "lineNumber": 83,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": "br",
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 7,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {},
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {},
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 60,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                              "lineNumber": 84,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 69,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                                "lineNumber": 85,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "elementType": "p",
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "End time:",
                                "className": "shift-info-label",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "End time:",
                                "className": "shift-info-label",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugID": 70,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                                  "lineNumber": 86,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "elementType": "p",
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 1,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": undefined,
                                  "className": "shift-info-entry",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": undefined,
                                  "className": "shift-info-entry",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": <p
                                  class="shift-info-entry"
                                />,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "p",
                                "updateQueue": null,
                              },
                              "stateNode": <p
                                class="shift-info-label"
                              >
                                End time:
                              </p>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "p",
                              "updateQueue": null,
                            },
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "elementType": "div",
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 8,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <p
                                  className="shift-info-label"
                                >
                                  End time:
                                </p>,
                                <p
                                  className="shift-info-entry"
                                />,
                              ],
                              "className": "shift-info",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <p
                                  className="shift-info-label"
                                >
                                  End time:
                                </p>,
                                <p
                                  className="shift-info-entry"
                                />,
                              ],
                              "className": "shift-info",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 61,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                                "lineNumber": 88,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "elementType": "br",
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 9,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {},
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {},
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugID": 62,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                                  "lineNumber": 89,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugID": 71,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                                    "lineNumber": 90,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "effectTag": 0,
                                  "elementType": "button",
                                  "expirationTime": 0,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": "Request shift swap",
                                    "className": "custom-button",
                                    "id": "toggle-popup-content",
                                    "onClick": [Function],
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": "Request shift swap",
                                    "className": "custom-button",
                                    "id": "toggle-popup-content",
                                    "onClick": [Function],
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugID": 72,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                                      "lineNumber": 39,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childExpirationTime": 0,
                                    "effectTag": 0,
                                    "elementType": "button",
                                    "expirationTime": 0,
                                    "firstContextDependency": null,
                                    "firstEffect": null,
                                    "index": 1,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": "Request emergency cover",
                                      "className": "custom-button",
                                      "id": "toggle-emergency-popup-content",
                                      "onClick": [Function],
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": "Request emergency cover",
                                      "className": "custom-button",
                                      "id": "toggle-emergency-popup-content",
                                      "onClick": [Function],
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": <button
                                      class="custom-button"
                                      id="toggle-emergency-popup-content"
                                    >
                                      Request emergency cover
                                    </button>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "button",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <button
                                    class="custom-button"
                                    id="toggle-popup-content"
                                  >
                                    Request shift swap
                                  </button>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "button",
                                  "updateQueue": null,
                                },
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "elementType": "section",
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 10,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": Array [
                                    <button
                                      className="custom-button"
                                      id="toggle-popup-content"
                                      onClick={[Function]}
                                    >
                                      Request shift swap
                                    </button>,
                                    <button
                                      className="custom-button"
                                      id="toggle-emergency-popup-content"
                                      onClick={[Function]}
                                    >
                                      Request emergency cover
                                    </button>,
                                  ],
                                  "id": "toggle-popup-state",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": Array [
                                    <button
                                      className="custom-button"
                                      id="toggle-popup-content"
                                      onClick={[Function]}
                                    >
                                      Request shift swap
                                    </button>,
                                    <button
                                      className="custom-button"
                                      id="toggle-emergency-popup-content"
                                      onClick={[Function]}
                                    >
                                      Request emergency cover
                                    </button>,
                                  ],
                                  "id": "toggle-popup-state",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": <section
                                  id="toggle-popup-state"
                                >
                                  <button
                                    class="custom-button"
                                    id="toggle-popup-content"
                                  >
                                    Request shift swap
                                  </button>
                                  <button
                                    class="custom-button"
                                    id="toggle-emergency-popup-content"
                                  >
                                    Request emergency cover
                                  </button>
                                </section>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "section",
                                "updateQueue": null,
                              },
                              "stateNode": <br />,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "br",
                              "updateQueue": null,
                            },
                            "stateNode": <div
                              class="shift-info"
                            >
                              <p
                                class="shift-info-label"
                              >
                                End time:
                              </p>
                              <p
                                class="shift-info-entry"
                              />
                            </div>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "stateNode": <br />,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "br",
                          "updateQueue": null,
                        },
                        "stateNode": <div
                          class="shift-info"
                        >
                          <p
                            class="shift-info-label"
                          >
                            Start time:
                          </p>
                          <p
                            class="shift-info-entry"
                          />
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <br />,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "br",
                      "updateQueue": null,
                    },
                    "stateNode": <div
                      class="shift-info"
                    >
                      <p
                        class="shift-info-label"
                      >
                        Contact email address:
                      </p>
                      <p
                        class="shift-info-entry"
                      />
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <br />,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "br",
                  "updateQueue": null,
                },
                "stateNode": <div
                  class="shift-info"
                >
                  <p
                    class="shift-info-label"
                  >
                    Employee name:
                  </p>
                  <p
                    class="shift-info-entry"
                  />
                </div>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "stateNode": <br />,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "br",
              "updateQueue": null,
            },
            "stateNode": <h3
              class="popup-title"
            >
              Shift Information
            </h3>,
            "tag": 5,
            "treeBaseDuration": 0,
            "type": "h3",
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "effectTag": 0,
          "elementType": "div",
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": Array [
              <h3
                className="popup-title"
              >
                Shift Information
              </h3>,
              <br />,
              <div
                className="shift-info"
              >
                <p
                  className="shift-info-label"
                >
                  Employee name:
                </p>
                <p
                  className="shift-info-entry"
                />
              </div>,
              <br />,
              <div
                className="shift-info"
              >
                <p
                  className="shift-info-label"
                >
                  Contact email address:
                </p>
                <p
                  className="shift-info-entry"
                />
              </div>,
              <br />,
              <div
                className="shift-info"
              >
                <p
                  className="shift-info-label"
                >
                  Start time:
                </p>
                <p
                  className="shift-info-entry"
                />
              </div>,
              <br />,
              <div
                className="shift-info"
              >
                <p
                  className="shift-info-label"
                >
                  End time:
                </p>
                <p
                  className="shift-info-entry"
                />
              </div>,
              <br />,
              <section
                id="toggle-popup-state"
              >
                <button
                  className="custom-button"
                  id="toggle-popup-content"
                  onClick={[Function]}
                >
                  Request shift swap
                </button>
                <button
                  className="custom-button"
                  id="toggle-emergency-popup-content"
                  onClick={[Function]}
                >
                  Request emergency cover
                </button>
              </section>,
            ],
            "id": "shift-popup",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": Array [
              <h3
                className="popup-title"
              >
                Shift Information
              </h3>,
              <br />,
              <div
                className="shift-info"
              >
                <p
                  className="shift-info-label"
                >
                  Employee name:
                </p>
                <p
                  className="shift-info-entry"
                />
              </div>,
              <br />,
              <div
                className="shift-info"
              >
                <p
                  className="shift-info-label"
                >
                  Contact email address:
                </p>
                <p
                  className="shift-info-entry"
                />
              </div>,
              <br />,
              <div
                className="shift-info"
              >
                <p
                  className="shift-info-label"
                >
                  Start time:
                </p>
                <p
                  className="shift-info-entry"
                />
              </div>,
              <br />,
              <div
                className="shift-info"
              >
                <p
                  className="shift-info-label"
                >
                  End time:
                </p>
                <p
                  className="shift-info-entry"
                />
              </div>,
              <br />,
              <section
                id="toggle-popup-state"
              >
                <button
                  className="custom-button"
                  id="toggle-popup-content"
                  onClick={[Function]}
                >
                  Request shift swap
                </button>
                <button
                  className="custom-button"
                  id="toggle-emergency-popup-content"
                  onClick={[Function]}
                >
                  Request emergency cover
                </button>
              </section>,
            ],
            "id": "shift-popup",
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": <div
            id="shift-popup"
          >
            <h3
              class="popup-title"
            >
              Shift Information
            </h3>
            <br />
            <div
              class="shift-info"
            >
              <p
                class="shift-info-label"
              >
                Employee name:
              </p>
              <p
                class="shift-info-entry"
              />
            </div>
            <br />
            <div
              class="shift-info"
            >
              <p
                class="shift-info-label"
              >
                Contact email address:
              </p>
              <p
                class="shift-info-entry"
              />
            </div>
            <br />
            <div
              class="shift-info"
            >
              <p
                class="shift-info-label"
              >
                Start time:
              </p>
              <p
                class="shift-info-entry"
              />
            </div>
            <br />
            <div
              class="shift-info"
            >
              <p
                class="shift-info-label"
              >
                End time:
              </p>
              <p
                class="shift-info-entry"
              />
            </div>
            <br />
            <section
              id="toggle-popup-state"
            >
              <button
                class="custom-button"
                id="toggle-popup-content"
              >
                Request shift swap
              </button>
              <button
                class="custom-button"
                id="toggle-emergency-popup-content"
              >
                Request emergency cover
              </button>
            </section>
          </div>,
          "tag": 5,
          "treeBaseDuration": 0,
          "type": "div",
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "effectTag": 1,
        "elementType": [Function],
        "expirationTime": 0,
        "firstContextDependency": null,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "shiftInfo": Object {
            "end": Object {
              "toLocaleString": [Function],
            },
            "start": Object {
              "toLocaleString": [Function],
            },
            "userId": 1,
          },
        },
        "memoizedState": Object {
          "formatEnd": undefined,
          "formatStart": undefined,
          "showingEmergencyForm": false,
          "showingRequestForm": false,
        },
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "shiftInfo": Object {
            "end": Object {
              "toLocaleString": [Function],
            },
            "start": Object {
              "toLocaleString": [Function],
            },
            "userId": 1,
          },
        },
        "ref": null,
        "return": FiberNode {
          "_debugID": 49,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "shiftInfo": Object {
                "end": Object {
                  "toLocaleString": [Function],
                },
                "start": Object {
                  "toLocaleString": [Function],
                },
                "userId": 1,
              },
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "shiftInfo": Object {
                "end": Object {
                  "toLocaleString": [Function],
                },
                "start": Object {
                  "toLocaleString": [Function],
                },
                "userId": 1,
              },
            },
          },
          "mode": 0,
          "nextEffect": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 1073741823,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    id="shift-popup"
                  >
                    <h3
                      class="popup-title"
                    >
                      Shift Information
                    </h3>
                    <br />
                    <div
                      class="shift-info"
                    >
                      <p
                        class="shift-info-label"
                      >
                        Employee name:
                      </p>
                      <p
                        class="shift-info-entry"
                      />
                    </div>
                    <br />
                    <div
                      class="shift-info"
                    >
                      <p
                        class="shift-info-label"
                      >
                        Contact email address:
                      </p>
                      <p
                        class="shift-info-entry"
                      />
                    </div>
                    <br />
                    <div
                      class="shift-info"
                    >
                      <p
                        class="shift-info-label"
                      >
                        Start time:
                      </p>
                      <p
                        class="shift-info-entry"
                      />
                    </div>
                    <br />
                    <div
                      class="shift-info"
                    >
                      <p
                        class="shift-info-label"
                      >
                        End time:
                      </p>
                      <p
                        class="shift-info-entry"
                      />
                    </div>
                    <br />
                    <section
                      id="toggle-popup-state"
                    >
                      <button
                        class="custom-button"
                        id="toggle-popup-content"
                      >
                        Request shift swap
                      </button>
                      <button
                        class="custom-button"
                        id="toggle-emergency-popup-content"
                      >
                        Request emergency cover
                      </button>
                    </section>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "shiftInfo": Object {
                            "end": Object {
                              "toLocaleString": [Function],
                            },
                            "start": Object {
                              "toLocaleString": [Function],
                            },
                            "userId": 1,
                          },
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "shiftInfo": Object {
                            "end": Object {
                              "toLocaleString": [Function],
                            },
                            "start": Object {
                              "toLocaleString": [Function],
                            },
                            "userId": 1,
                          },
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "shiftInfo": Object {
                      "end": Object {
                        "toLocaleString": [Function],
                      },
                      "start": Object {
                        "toLocaleString": [Function],
                      },
                      "userId": 1,
                    },
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  id="shift-popup"
                >
                  <h3
                    class="popup-title"
                  >
                    Shift Information
                  </h3>
                  <br />
                  <div
                    class="shift-info"
                  >
                    <p
                      class="shift-info-label"
                    >
                      Employee name:
                    </p>
                    <p
                      class="shift-info-entry"
                    />
                  </div>
                  <br />
                  <div
                    class="shift-info"
                  >
                    <p
                      class="shift-info-label"
                    >
                      Contact email address:
                    </p>
                    <p
                      class="shift-info-entry"
                    />
                  </div>
                  <br />
                  <div
                    class="shift-info"
                  >
                    <p
                      class="shift-info-label"
                    >
                      Start time:
                    </p>
                    <p
                      class="shift-info-entry"
                    />
                  </div>
                  <br />
                  <div
                    class="shift-info"
                  >
                    <p
                      class="shift-info-label"
                    >
                      End time:
                    </p>
                    <p
                      class="shift-info-entry"
                    />
                  </div>
                  <br />
                  <section
                    id="toggle-popup-state"
                  >
                    <button
                      class="custom-button"
                      id="toggle-popup-content"
                    >
                      Request shift swap
                    </button>
                    <button
                      class="custom-button"
                      id="toggle-emergency-popup-content"
                    >
                      Request emergency cover
                    </button>
                  </section>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "shiftInfo": Object {
                        "end": Object {
                          "toLocaleString": [Function],
                        },
                        "start": Object {
                          "toLocaleString": [Function],
                        },
                        "userId": 1,
                      },
                    }
                  }
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "shiftInfo": Object {
                "end": Object {
                  "toLocaleString": [Function],
                },
                "start": Object {
                  "toLocaleString": [Function],
                },
                "userId": 1,
              },
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 1073741823,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    id="shift-popup"
                  >
                    <h3
                      class="popup-title"
                    >
                      Shift Information
                    </h3>
                    <br />
                    <div
                      class="shift-info"
                    >
                      <p
                        class="shift-info-label"
                      >
                        Employee name:
                      </p>
                      <p
                        class="shift-info-entry"
                      />
                    </div>
                    <br />
                    <div
                      class="shift-info"
                    >
                      <p
                        class="shift-info-label"
                      >
                        Contact email address:
                      </p>
                      <p
                        class="shift-info-entry"
                      />
                    </div>
                    <br />
                    <div
                      class="shift-info"
                    >
                      <p
                        class="shift-info-label"
                      >
                        Start time:
                      </p>
                      <p
                        class="shift-info-entry"
                      />
                    </div>
                    <br />
                    <div
                      class="shift-info"
                    >
                      <p
                        class="shift-info-label"
                      >
                        End time:
                      </p>
                      <p
                        class="shift-info-entry"
                      />
                    </div>
                    <br />
                    <section
                      id="toggle-popup-state"
                    >
                      <button
                        class="custom-button"
                        id="toggle-popup-content"
                      >
                        Request shift swap
                      </button>
                      <button
                        class="custom-button"
                        id="toggle-emergency-popup-content"
                      >
                        Request emergency cover
                      </button>
                    </section>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "shiftInfo": Object {
                            "end": Object {
                              "toLocaleString": [Function],
                            },
                            "start": Object {
                              "toLocaleString": [Function],
                            },
                            "userId": 1,
                          },
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "shiftInfo": Object {
                            "end": Object {
                              "toLocaleString": [Function],
                            },
                            "start": Object {
                              "toLocaleString": [Function],
                            },
                            "userId": 1,
                          },
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "shiftInfo": Object {
                      "end": Object {
                        "toLocaleString": [Function],
                      },
                      "start": Object {
                        "toLocaleString": [Function],
                      },
                      "userId": 1,
                    },
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  id="shift-popup"
                >
                  <h3
                    class="popup-title"
                  >
                    Shift Information
                  </h3>
                  <br />
                  <div
                    class="shift-info"
                  >
                    <p
                      class="shift-info-label"
                    >
                      Employee name:
                    </p>
                    <p
                      class="shift-info-entry"
                    />
                  </div>
                  <br />
                  <div
                    class="shift-info"
                  >
                    <p
                      class="shift-info-label"
                    >
                      Contact email address:
                    </p>
                    <p
                      class="shift-info-entry"
                    />
                  </div>
                  <br />
                  <div
                    class="shift-info"
                  >
                    <p
                      class="shift-info-label"
                    >
                      Start time:
                    </p>
                    <p
                      class="shift-info-entry"
                    />
                  </div>
                  <br />
                  <div
                    class="shift-info"
                  >
                    <p
                      class="shift-info-label"
                    >
                      End time:
                    </p>
                    <p
                      class="shift-info-entry"
                    />
                  </div>
                  <br />
                  <section
                    id="toggle-popup-state"
                  >
                    <button
                      class="custom-button"
                      id="toggle-popup-content"
                    >
                      Request shift swap
                    </button>
                    <button
                      class="custom-button"
                      id="toggle-emergency-popup-content"
                    >
                      Request emergency cover
                    </button>
                  </section>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "shiftInfo": Object {
                        "end": Object {
                          "toLocaleString": [Function],
                        },
                        "start": Object {
                          "toLocaleString": [Function],
                        },
                        "userId": 1,
                      },
                    }
                  }
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "shiftInfo": Object {
                  "end": Object {
                    "toLocaleString": [Function],
                  },
                  "start": Object {
                    "toLocaleString": [Function],
                  },
                  "userId": 1,
                },
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "shiftInfo": Object {
                  "end": Object {
                    "toLocaleString": [Function],
                  },
                  "start": Object {
                    "toLocaleString": [Function],
                  },
                  "userId": 1,
                },
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": [Circular],
        "tag": 1,
        "treeBaseDuration": 0,
        "type": [Function],
        "updateQueue": Object {
          "baseState": Object {
            "formatEnd": undefined,
            "formatStart": undefined,
            "showingEmergencyForm": false,
            "showingRequestForm": false,
          },
          "firstCapturedEffect": null,
          "firstCapturedUpdate": null,
          "firstEffect": null,
          "firstUpdate": null,
          "lastCapturedEffect": null,
          "lastCapturedUpdate": null,
          "lastEffect": null,
          "lastUpdate": null,
        },
      },
      "_reactInternalInstance": Object {},
      "changeState": [Function],
      "context": Object {},
      "emergencyRequest": [Function],
      "formatEmergencyRequest": [Function],
      "props": Object {
        "shiftInfo": Object {
          "end": Object {
            "toLocaleString": [Function],
          },
          "start": Object {
            "toLocaleString": [Function],
          },
          "userId": 1,
        },
      },
      "refs": Object {},
      "state": Object {
        "formatEnd": undefined,
        "formatStart": undefined,
        "showingEmergencyForm": false,
        "showingRequestForm": false,
      },
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "shiftInfo": Object {
        "end": Object {
          "toLocaleString": [Function],
        },
        "start": Object {
          "toLocaleString": [Function],
        },
        "userId": 1,
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": <div
        id="shift-popup"
      >
        <h3
          class="popup-title"
        >
          Shift Information
        </h3>
        <br />
        <div
          class="shift-info"
        >
          <p
            class="shift-info-label"
          >
            Employee name:
          </p>
          <p
            class="shift-info-entry"
          />
        </div>
        <br />
        <div
          class="shift-info"
        >
          <p
            class="shift-info-label"
          >
            Contact email address:
          </p>
          <p
            class="shift-info-entry"
          />
        </div>
        <br />
        <div
          class="shift-info"
        >
          <p
            class="shift-info-label"
          >
            Start time:
          </p>
          <p
            class="shift-info-entry"
          />
        </div>
        <br />
        <div
          class="shift-info"
        >
          <p
            class="shift-info-label"
          >
            End time:
          </p>
          <p
            class="shift-info-entry"
          />
        </div>
        <br />
        <section
          id="toggle-popup-state"
        >
          <button
            class="custom-button"
            id="toggle-popup-content"
          >
            Request shift swap
          </button>
          <button
            class="custom-button"
            id="toggle-emergency-popup-content"
          >
            Request emergency cover
          </button>
        </section>
      </div>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h3
            className="popup-title"
          >
            Shift Information
          </h3>,
          <br />,
          <div
            className="shift-info"
          >
            <p
              className="shift-info-label"
            >
              Employee name:
            </p>
            <p
              className="shift-info-entry"
            />
          </div>,
          <br />,
          <div
            className="shift-info"
          >
            <p
              className="shift-info-label"
            >
              Contact email address:
            </p>
            <p
              className="shift-info-entry"
            />
          </div>,
          <br />,
          <div
            className="shift-info"
          >
            <p
              className="shift-info-label"
            >
              Start time:
            </p>
            <p
              className="shift-info-entry"
            />
          </div>,
          <br />,
          <div
            className="shift-info"
          >
            <p
              className="shift-info-label"
            >
              End time:
            </p>
            <p
              className="shift-info-entry"
            />
          </div>,
          <br />,
          <section
            id="toggle-popup-state"
          >
            <button
              className="custom-button"
              id="toggle-popup-content"
              onClick={[Function]}
            >
              Request shift swap
            </button>
            <button
              className="custom-button"
              id="toggle-emergency-popup-content"
              onClick={[Function]}
            >
              Request emergency cover
            </button>
          </section>,
        ],
        "id": "shift-popup",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <h3
            class="popup-title"
          >
            Shift Information
          </h3>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Shift Information",
            "className": "popup-title",
          },
          "ref": null,
          "rendered": Array [
            "Shift Information",
          ],
          "type": "h3",
        },
        Object {
          "instance": <br />,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": Array [
            undefined,
          ],
          "type": "br",
        },
        Object {
          "instance": <div
            class="shift-info"
          >
            <p
              class="shift-info-label"
            >
              Employee name:
            </p>
            <p
              class="shift-info-entry"
            />
          </div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p
                className="shift-info-label"
              >
                Employee name:
              </p>,
              <p
                className="shift-info-entry"
              />,
            ],
            "className": "shift-info",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <p
                class="shift-info-label"
              >
                Employee name:
              </p>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Employee name:",
                "className": "shift-info-label",
              },
              "ref": null,
              "rendered": Array [
                "Employee name:",
              ],
              "type": "p",
            },
            Object {
              "instance": <p
                class="shift-info-entry"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "shift-info-entry",
              },
              "ref": null,
              "rendered": Array [
                undefined,
              ],
              "type": "p",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": <br />,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": Array [
            undefined,
          ],
          "type": "br",
        },
        Object {
          "instance": <div
            class="shift-info"
          >
            <p
              class="shift-info-label"
            >
              Contact email address:
            </p>
            <p
              class="shift-info-entry"
            />
          </div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p
                className="shift-info-label"
              >
                Contact email address:
              </p>,
              <p
                className="shift-info-entry"
              />,
            ],
            "className": "shift-info",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <p
                class="shift-info-label"
              >
                Contact email address:
              </p>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Contact email address:",
                "className": "shift-info-label",
              },
              "ref": null,
              "rendered": Array [
                "Contact email address:",
              ],
              "type": "p",
            },
            Object {
              "instance": <p
                class="shift-info-entry"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "shift-info-entry",
              },
              "ref": null,
              "rendered": Array [
                undefined,
              ],
              "type": "p",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": <br />,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": Array [
            undefined,
          ],
          "type": "br",
        },
        Object {
          "instance": <div
            class="shift-info"
          >
            <p
              class="shift-info-label"
            >
              Start time:
            </p>
            <p
              class="shift-info-entry"
            />
          </div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p
                className="shift-info-label"
              >
                Start time:
              </p>,
              <p
                className="shift-info-entry"
              />,
            ],
            "className": "shift-info",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <p
                class="shift-info-label"
              >
                Start time:
              </p>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Start time:",
                "className": "shift-info-label",
              },
              "ref": null,
              "rendered": Array [
                "Start time:",
              ],
              "type": "p",
            },
            Object {
              "instance": <p
                class="shift-info-entry"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "shift-info-entry",
              },
              "ref": null,
              "rendered": Array [
                undefined,
              ],
              "type": "p",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": <br />,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": Array [
            undefined,
          ],
          "type": "br",
        },
        Object {
          "instance": <div
            class="shift-info"
          >
            <p
              class="shift-info-label"
            >
              End time:
            </p>
            <p
              class="shift-info-entry"
            />
          </div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p
                className="shift-info-label"
              >
                End time:
              </p>,
              <p
                className="shift-info-entry"
              />,
            ],
            "className": "shift-info",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <p
                class="shift-info-label"
              >
                End time:
              </p>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "End time:",
                "className": "shift-info-label",
              },
              "ref": null,
              "rendered": Array [
                "End time:",
              ],
              "type": "p",
            },
            Object {
              "instance": <p
                class="shift-info-entry"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "shift-info-entry",
              },
              "ref": null,
              "rendered": Array [
                undefined,
              ],
              "type": "p",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": <br />,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": Array [
            undefined,
          ],
          "type": "br",
        },
        Object {
          "instance": <section
            id="toggle-popup-state"
          >
            <button
              class="custom-button"
              id="toggle-popup-content"
            >
              Request shift swap
            </button>
            <button
              class="custom-button"
              id="toggle-emergency-popup-content"
            >
              Request emergency cover
            </button>
          </section>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <button
                className="custom-button"
                id="toggle-popup-content"
                onClick={[Function]}
              >
                Request shift swap
              </button>,
              <button
                className="custom-button"
                id="toggle-emergency-popup-content"
                onClick={[Function]}
              >
                Request emergency cover
              </button>,
            ],
            "id": "toggle-popup-state",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <button
                class="custom-button"
                id="toggle-popup-content"
              >
                Request shift swap
              </button>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Request shift swap",
                "className": "custom-button",
                "id": "toggle-popup-content",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Array [
                "Request shift swap",
              ],
              "type": "button",
            },
            Object {
              "instance": <button
                class="custom-button"
                id="toggle-emergency-popup-content"
              >
                Request emergency cover
              </button>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Request emergency cover",
                "className": "custom-button",
                "id": "toggle-emergency-popup-content",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Array [
                "Request emergency cover",
              ],
              "type": "button",
            },
          ],
          "type": "section",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": ShiftPopup {
        "_reactInternalFiber": FiberNode {
          "_debugID": 50,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 49,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "shiftInfo": Object {
                  "end": Object {
                    "toLocaleString": [Function],
                  },
                  "start": Object {
                    "toLocaleString": [Function],
                  },
                  "userId": 1,
                },
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "shiftInfo": Object {
                  "end": Object {
                    "toLocaleString": [Function],
                  },
                  "start": Object {
                    "toLocaleString": [Function],
                  },
                  "userId": 1,
                },
              },
            },
            "mode": 0,
            "nextEffect": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 1073741823,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      id="shift-popup"
                    >
                      <h3
                        class="popup-title"
                      >
                        Shift Information
                      </h3>
                      <br />
                      <div
                        class="shift-info"
                      >
                        <p
                          class="shift-info-label"
                        >
                          Employee name:
                        </p>
                        <p
                          class="shift-info-entry"
                        />
                      </div>
                      <br />
                      <div
                        class="shift-info"
                      >
                        <p
                          class="shift-info-label"
                        >
                          Contact email address:
                        </p>
                        <p
                          class="shift-info-entry"
                        />
                      </div>
                      <br />
                      <div
                        class="shift-info"
                      >
                        <p
                          class="shift-info-label"
                        >
                          Start time:
                        </p>
                        <p
                          class="shift-info-entry"
                        />
                      </div>
                      <br />
                      <div
                        class="shift-info"
                      >
                        <p
                          class="shift-info-label"
                        >
                          End time:
                        </p>
                        <p
                          class="shift-info-entry"
                        />
                      </div>
                      <br />
                      <section
                        id="toggle-popup-state"
                      >
                        <button
                          class="custom-button"
                          id="toggle-popup-content"
                        >
                          Request shift swap
                        </button>
                        <button
                          class="custom-button"
                          id="toggle-emergency-popup-content"
                        >
                          Request emergency cover
                        </button>
                      </section>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "shiftInfo": Object {
                              "end": Object {
                                "toLocaleString": [Function],
                              },
                              "start": Object {
                                "toLocaleString": [Function],
                              },
                              "userId": 1,
                            },
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "shiftInfo": Object {
                              "end": Object {
                                "toLocaleString": [Function],
                              },
                              "start": Object {
                                "toLocaleString": [Function],
                              },
                              "userId": 1,
                            },
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "shiftInfo": Object {
                        "end": Object {
                          "toLocaleString": [Function],
                        },
                        "start": Object {
                          "toLocaleString": [Function],
                        },
                        "userId": 1,
                      },
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    id="shift-popup"
                  >
                    <h3
                      class="popup-title"
                    >
                      Shift Information
                    </h3>
                    <br />
                    <div
                      class="shift-info"
                    >
                      <p
                        class="shift-info-label"
                      >
                        Employee name:
                      </p>
                      <p
                        class="shift-info-entry"
                      />
                    </div>
                    <br />
                    <div
                      class="shift-info"
                    >
                      <p
                        class="shift-info-label"
                      >
                        Contact email address:
                      </p>
                      <p
                        class="shift-info-entry"
                      />
                    </div>
                    <br />
                    <div
                      class="shift-info"
                    >
                      <p
                        class="shift-info-label"
                      >
                        Start time:
                      </p>
                      <p
                        class="shift-info-entry"
                      />
                    </div>
                    <br />
                    <div
                      class="shift-info"
                    >
                      <p
                        class="shift-info-label"
                      >
                        End time:
                      </p>
                      <p
                        class="shift-info-entry"
                      />
                    </div>
                    <br />
                    <section
                      id="toggle-popup-state"
                    >
                      <button
                        class="custom-button"
                        id="toggle-popup-content"
                      >
                        Request shift swap
                      </button>
                      <button
                        class="custom-button"
                        id="toggle-emergency-popup-content"
                      >
                        Request emergency cover
                      </button>
                    </section>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "shiftInfo": Object {
                          "end": Object {
                            "toLocaleString": [Function],
                          },
                          "start": Object {
                            "toLocaleString": [Function],
                          },
                          "userId": 1,
                        },
                      }
                    }
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "shiftInfo": Object {
                  "end": Object {
                    "toLocaleString": [Function],
                  },
                  "start": Object {
                    "toLocaleString": [Function],
                  },
                  "userId": 1,
                },
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 1073741823,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      id="shift-popup"
                    >
                      <h3
                        class="popup-title"
                      >
                        Shift Information
                      </h3>
                      <br />
                      <div
                        class="shift-info"
                      >
                        <p
                          class="shift-info-label"
                        >
                          Employee name:
                        </p>
                        <p
                          class="shift-info-entry"
                        />
                      </div>
                      <br />
                      <div
                        class="shift-info"
                      >
                        <p
                          class="shift-info-label"
                        >
                          Contact email address:
                        </p>
                        <p
                          class="shift-info-entry"
                        />
                      </div>
                      <br />
                      <div
                        class="shift-info"
                      >
                        <p
                          class="shift-info-label"
                        >
                          Start time:
                        </p>
                        <p
                          class="shift-info-entry"
                        />
                      </div>
                      <br />
                      <div
                        class="shift-info"
                      >
                        <p
                          class="shift-info-label"
                        >
                          End time:
                        </p>
                        <p
                          class="shift-info-entry"
                        />
                      </div>
                      <br />
                      <section
                        id="toggle-popup-state"
                      >
                        <button
                          class="custom-button"
                          id="toggle-popup-content"
                        >
                          Request shift swap
                        </button>
                        <button
                          class="custom-button"
                          id="toggle-emergency-popup-content"
                        >
                          Request emergency cover
                        </button>
                      </section>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "shiftInfo": Object {
                              "end": Object {
                                "toLocaleString": [Function],
                              },
                              "start": Object {
                                "toLocaleString": [Function],
                              },
                              "userId": 1,
                            },
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "shiftInfo": Object {
                              "end": Object {
                                "toLocaleString": [Function],
                              },
                              "start": Object {
                                "toLocaleString": [Function],
                              },
                              "userId": 1,
                            },
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "shiftInfo": Object {
                        "end": Object {
                          "toLocaleString": [Function],
                        },
                        "start": Object {
                          "toLocaleString": [Function],
                        },
                        "userId": 1,
                      },
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    id="shift-popup"
                  >
                    <h3
                      class="popup-title"
                    >
                      Shift Information
                    </h3>
                    <br />
                    <div
                      class="shift-info"
                    >
                      <p
                        class="shift-info-label"
                      >
                        Employee name:
                      </p>
                      <p
                        class="shift-info-entry"
                      />
                    </div>
                    <br />
                    <div
                      class="shift-info"
                    >
                      <p
                        class="shift-info-label"
                      >
                        Contact email address:
                      </p>
                      <p
                        class="shift-info-entry"
                      />
                    </div>
                    <br />
                    <div
                      class="shift-info"
                    >
                      <p
                        class="shift-info-label"
                      >
                        Start time:
                      </p>
                      <p
                        class="shift-info-entry"
                      />
                    </div>
                    <br />
                    <div
                      class="shift-info"
                    >
                      <p
                        class="shift-info-label"
                      >
                        End time:
                      </p>
                      <p
                        class="shift-info-entry"
                      />
                    </div>
                    <br />
                    <section
                      id="toggle-popup-state"
                    >
                      <button
                        class="custom-button"
                        id="toggle-popup-content"
                      >
                        Request shift swap
                      </button>
                      <button
                        class="custom-button"
                        id="toggle-emergency-popup-content"
                      >
                        Request emergency cover
                      </button>
                    </section>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "shiftInfo": Object {
                          "end": Object {
                            "toLocaleString": [Function],
                          },
                          "start": Object {
                            "toLocaleString": [Function],
                          },
                          "userId": 1,
                        },
                      }
                    }
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "shiftInfo": Object {
                    "end": Object {
                      "toLocaleString": [Function],
                    },
                    "start": Object {
                      "toLocaleString": [Function],
                    },
                    "userId": 1,
                  },
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "shiftInfo": Object {
                    "end": Object {
                      "toLocaleString": [Function],
                    },
                    "start": Object {
                      "toLocaleString": [Function],
                    },
                    "userId": 1,
                  },
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 51,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
              "lineNumber": 66,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 52,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                "lineNumber": 67,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": "h3",
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": "Shift Information",
                "className": "popup-title",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": "Shift Information",
                "className": "popup-title",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": FiberNode {
                "_debugID": 53,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                  "lineNumber": 68,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": "br",
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {},
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {},
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": FiberNode {
                  "_debugID": 54,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                    "lineNumber": 69,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 63,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                      "lineNumber": 70,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": "p",
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Employee name:",
                      "className": "shift-info-label",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Employee name:",
                      "className": "shift-info-label",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 64,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                        "lineNumber": 71,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": "p",
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": undefined,
                        "className": "shift-info-entry",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": undefined,
                        "className": "shift-info-entry",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <p
                        class="shift-info-entry"
                      />,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "p",
                      "updateQueue": null,
                    },
                    "stateNode": <p
                      class="shift-info-label"
                    >
                      Employee name:
                    </p>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "p",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": "div",
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 2,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <p
                        className="shift-info-label"
                      >
                        Employee name:
                      </p>,
                      <p
                        className="shift-info-entry"
                      />,
                    ],
                    "className": "shift-info",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <p
                        className="shift-info-label"
                      >
                        Employee name:
                      </p>,
                      <p
                        className="shift-info-entry"
                      />,
                    ],
                    "className": "shift-info",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 55,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                      "lineNumber": 73,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": "br",
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 3,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {},
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {},
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 56,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                        "lineNumber": 74,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 65,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                          "lineNumber": 75,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": "p",
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Contact email address:",
                          "className": "shift-info-label",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "Contact email address:",
                          "className": "shift-info-label",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 66,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                            "lineNumber": 76,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": "p",
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": undefined,
                            "className": "shift-info-entry",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": undefined,
                            "className": "shift-info-entry",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <p
                            class="shift-info-entry"
                          />,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "p",
                          "updateQueue": null,
                        },
                        "stateNode": <p
                          class="shift-info-label"
                        >
                          Contact email address:
                        </p>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "p",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 4,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <p
                            className="shift-info-label"
                          >
                            Contact email address:
                          </p>,
                          <p
                            className="shift-info-entry"
                          />,
                        ],
                        "className": "shift-info",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <p
                            className="shift-info-label"
                          >
                            Contact email address:
                          </p>,
                          <p
                            className="shift-info-entry"
                          />,
                        ],
                        "className": "shift-info",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 57,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                          "lineNumber": 78,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": "br",
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 5,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {},
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {},
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 58,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                            "lineNumber": 79,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 67,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                              "lineNumber": 80,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "elementType": "p",
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Start time:",
                              "className": "shift-info-label",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "Start time:",
                              "className": "shift-info-label",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 68,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                                "lineNumber": 81,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "elementType": "p",
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": undefined,
                                "className": "shift-info-entry",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": undefined,
                                "className": "shift-info-entry",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <p
                                class="shift-info-entry"
                              />,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "p",
                              "updateQueue": null,
                            },
                            "stateNode": <p
                              class="shift-info-label"
                            >
                              Start time:
                            </p>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "p",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": "div",
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 6,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <p
                                className="shift-info-label"
                              >
                                Start time:
                              </p>,
                              <p
                                className="shift-info-entry"
                              />,
                            ],
                            "className": "shift-info",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <p
                                className="shift-info-label"
                              >
                                Start time:
                              </p>,
                              <p
                                className="shift-info-entry"
                              />,
                            ],
                            "className": "shift-info",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 59,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                              "lineNumber": 83,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "elementType": "br",
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 7,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {},
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {},
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 60,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                                "lineNumber": 84,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 69,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                                  "lineNumber": 85,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "elementType": "p",
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "End time:",
                                  "className": "shift-info-label",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": "End time:",
                                  "className": "shift-info-label",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugID": 70,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                                    "lineNumber": 86,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "effectTag": 0,
                                  "elementType": "p",
                                  "expirationTime": 0,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 1,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": undefined,
                                    "className": "shift-info-entry",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": undefined,
                                    "className": "shift-info-entry",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": <p
                                    class="shift-info-entry"
                                  />,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "p",
                                  "updateQueue": null,
                                },
                                "stateNode": <p
                                  class="shift-info-label"
                                >
                                  End time:
                                </p>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "p",
                                "updateQueue": null,
                              },
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "elementType": "div",
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 8,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": Array [
                                  <p
                                    className="shift-info-label"
                                  >
                                    End time:
                                  </p>,
                                  <p
                                    className="shift-info-entry"
                                  />,
                                ],
                                "className": "shift-info",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": Array [
                                  <p
                                    className="shift-info-label"
                                  >
                                    End time:
                                  </p>,
                                  <p
                                    className="shift-info-entry"
                                  />,
                                ],
                                "className": "shift-info",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugID": 61,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                                  "lineNumber": 88,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "elementType": "br",
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 9,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {},
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {},
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugID": 62,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                                    "lineNumber": 89,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugID": 71,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                                      "lineNumber": 90,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childExpirationTime": 0,
                                    "effectTag": 0,
                                    "elementType": "button",
                                    "expirationTime": 0,
                                    "firstContextDependency": null,
                                    "firstEffect": null,
                                    "index": 0,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": "Request shift swap",
                                      "className": "custom-button",
                                      "id": "toggle-popup-content",
                                      "onClick": [Function],
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": "Request shift swap",
                                      "className": "custom-button",
                                      "id": "toggle-popup-content",
                                      "onClick": [Function],
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugID": 72,
                                      "_debugIsCurrentlyTiming": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "/Users/Joel/Makers/final-project/schej-frontend/src/components/ShiftPopup.js",
                                        "lineNumber": 39,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childExpirationTime": 0,
                                      "effectTag": 0,
                                      "elementType": "button",
                                      "expirationTime": 0,
                                      "firstContextDependency": null,
                                      "firstEffect": null,
                                      "index": 1,
                                      "key": null,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": "Request emergency cover",
                                        "className": "custom-button",
                                        "id": "toggle-emergency-popup-content",
                                        "onClick": [Function],
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": "Request emergency cover",
                                        "className": "custom-button",
                                        "id": "toggle-emergency-popup-content",
                                        "onClick": [Function],
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": <button
                                        class="custom-button"
                                        id="toggle-emergency-popup-content"
                                      >
                                        Request emergency cover
                                      </button>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "button",
                                      "updateQueue": null,
                                    },
                                    "stateNode": <button
                                      class="custom-button"
                                      id="toggle-popup-content"
                                    >
                                      Request shift swap
                                    </button>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "button",
                                    "updateQueue": null,
                                  },
                                  "childExpirationTime": 0,
                                  "effectTag": 0,
                                  "elementType": "section",
                                  "expirationTime": 0,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 10,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": Array [
                                      <button
                                        className="custom-button"
                                        id="toggle-popup-content"
                                        onClick={[Function]}
                                      >
                                        Request shift swap
                                      </button>,
                                      <button
                                        className="custom-button"
                                        id="toggle-emergency-popup-content"
                                        onClick={[Function]}
                                      >
                                        Request emergency cover
                                      </button>,
                                    ],
                                    "id": "toggle-popup-state",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": Array [
                                      <button
                                        className="custom-button"
                                        id="toggle-popup-content"
                                        onClick={[Function]}
                                      >
                                        Request shift swap
                                      </button>,
                                      <button
                                        className="custom-button"
                                        id="toggle-emergency-popup-content"
                                        onClick={[Function]}
                                      >
                                        Request emergency cover
                                      </button>,
                                    ],
                                    "id": "toggle-popup-state",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": <section
                                    id="toggle-popup-state"
                                  >
                                    <button
                                      class="custom-button"
                                      id="toggle-popup-content"
                                    >
                                      Request shift swap
                                    </button>
                                    <button
                                      class="custom-button"
                                      id="toggle-emergency-popup-content"
                                    >
                                      Request emergency cover
                                    </button>
                                  </section>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "section",
                                  "updateQueue": null,
                                },
                                "stateNode": <br />,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "br",
                                "updateQueue": null,
                              },
                              "stateNode": <div
                                class="shift-info"
                              >
                                <p
                                  class="shift-info-label"
                                >
                                  End time:
                                </p>
                                <p
                                  class="shift-info-entry"
                                />
                              </div>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "div",
                              "updateQueue": null,
                            },
                            "stateNode": <br />,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "br",
                            "updateQueue": null,
                          },
                          "stateNode": <div
                            class="shift-info"
                          >
                            <p
                              class="shift-info-label"
                            >
                              Start time:
                            </p>
                            <p
                              class="shift-info-entry"
                            />
                          </div>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "stateNode": <br />,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "br",
                        "updateQueue": null,
                      },
                      "stateNode": <div
                        class="shift-info"
                      >
                        <p
                          class="shift-info-label"
                        >
                          Contact email address:
                        </p>
                        <p
                          class="shift-info-entry"
                        />
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <br />,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "br",
                    "updateQueue": null,
                  },
                  "stateNode": <div
                    class="shift-info"
                  >
                    <p
                      class="shift-info-label"
                    >
                      Employee name:
                    </p>
                    <p
                      class="shift-info-entry"
                    />
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "stateNode": <br />,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "br",
                "updateQueue": null,
              },
              "stateNode": <h3
                class="popup-title"
              >
                Shift Information
              </h3>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "h3",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 0,
            "elementType": "div",
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <h3
                  className="popup-title"
                >
                  Shift Information
                </h3>,
                <br />,
                <div
                  className="shift-info"
                >
                  <p
                    className="shift-info-label"
                  >
                    Employee name:
                  </p>
                  <p
                    className="shift-info-entry"
                  />
                </div>,
                <br />,
                <div
                  className="shift-info"
                >
                  <p
                    className="shift-info-label"
                  >
                    Contact email address:
                  </p>
                  <p
                    className="shift-info-entry"
                  />
                </div>,
                <br />,
                <div
                  className="shift-info"
                >
                  <p
                    className="shift-info-label"
                  >
                    Start time:
                  </p>
                  <p
                    className="shift-info-entry"
                  />
                </div>,
                <br />,
                <div
                  className="shift-info"
                >
                  <p
                    className="shift-info-label"
                  >
                    End time:
                  </p>
                  <p
                    className="shift-info-entry"
                  />
                </div>,
                <br />,
                <section
                  id="toggle-popup-state"
                >
                  <button
                    className="custom-button"
                    id="toggle-popup-content"
                    onClick={[Function]}
                  >
                    Request shift swap
                  </button>
                  <button
                    className="custom-button"
                    id="toggle-emergency-popup-content"
                    onClick={[Function]}
                  >
                    Request emergency cover
                  </button>
                </section>,
              ],
              "id": "shift-popup",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <h3
                  className="popup-title"
                >
                  Shift Information
                </h3>,
                <br />,
                <div
                  className="shift-info"
                >
                  <p
                    className="shift-info-label"
                  >
                    Employee name:
                  </p>
                  <p
                    className="shift-info-entry"
                  />
                </div>,
                <br />,
                <div
                  className="shift-info"
                >
                  <p
                    className="shift-info-label"
                  >
                    Contact email address:
                  </p>
                  <p
                    className="shift-info-entry"
                  />
                </div>,
                <br />,
                <div
                  className="shift-info"
                >
                  <p
                    className="shift-info-label"
                  >
                    Start time:
                  </p>
                  <p
                    className="shift-info-entry"
                  />
                </div>,
                <br />,
                <div
                  className="shift-info"
                >
                  <p
                    className="shift-info-label"
                  >
                    End time:
                  </p>
                  <p
                    className="shift-info-entry"
                  />
                </div>,
                <br />,
                <section
                  id="toggle-popup-state"
                >
                  <button
                    className="custom-button"
                    id="toggle-popup-content"
                    onClick={[Function]}
                  >
                    Request shift swap
                  </button>
                  <button
                    className="custom-button"
                    id="toggle-emergency-popup-content"
                    onClick={[Function]}
                  >
                    Request emergency cover
                  </button>
                </section>,
              ],
              "id": "shift-popup",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": <div
              id="shift-popup"
            >
              <h3
                class="popup-title"
              >
                Shift Information
              </h3>
              <br />
              <div
                class="shift-info"
              >
                <p
                  class="shift-info-label"
                >
                  Employee name:
                </p>
                <p
                  class="shift-info-entry"
                />
              </div>
              <br />
              <div
                class="shift-info"
              >
                <p
                  class="shift-info-label"
                >
                  Contact email address:
                </p>
                <p
                  class="shift-info-entry"
                />
              </div>
              <br />
              <div
                class="shift-info"
              >
                <p
                  class="shift-info-label"
                >
                  Start time:
                </p>
                <p
                  class="shift-info-entry"
                />
              </div>
              <br />
              <div
                class="shift-info"
              >
                <p
                  class="shift-info-label"
                >
                  End time:
                </p>
                <p
                  class="shift-info-entry"
                />
              </div>
              <br />
              <section
                id="toggle-popup-state"
              >
                <button
                  class="custom-button"
                  id="toggle-popup-content"
                >
                  Request shift swap
                </button>
                <button
                  class="custom-button"
                  id="toggle-emergency-popup-content"
                >
                  Request emergency cover
                </button>
              </section>
            </div>,
            "tag": 5,
            "treeBaseDuration": 0,
            "type": "div",
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "shiftInfo": Object {
              "end": Object {
                "toLocaleString": [Function],
              },
              "start": Object {
                "toLocaleString": [Function],
              },
              "userId": 1,
            },
          },
          "memoizedState": Object {
            "formatEnd": undefined,
            "formatStart": undefined,
            "showingEmergencyForm": false,
            "showingRequestForm": false,
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "shiftInfo": Object {
              "end": Object {
                "toLocaleString": [Function],
              },
              "start": Object {
                "toLocaleString": [Function],
              },
              "userId": 1,
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 49,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "shiftInfo": Object {
                  "end": Object {
                    "toLocaleString": [Function],
                  },
                  "start": Object {
                    "toLocaleString": [Function],
                  },
                  "userId": 1,
                },
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "shiftInfo": Object {
                  "end": Object {
                    "toLocaleString": [Function],
                  },
                  "start": Object {
                    "toLocaleString": [Function],
                  },
                  "userId": 1,
                },
              },
            },
            "mode": 0,
            "nextEffect": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 1073741823,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      id="shift-popup"
                    >
                      <h3
                        class="popup-title"
                      >
                        Shift Information
                      </h3>
                      <br />
                      <div
                        class="shift-info"
                      >
                        <p
                          class="shift-info-label"
                        >
                          Employee name:
                        </p>
                        <p
                          class="shift-info-entry"
                        />
                      </div>
                      <br />
                      <div
                        class="shift-info"
                      >
                        <p
                          class="shift-info-label"
                        >
                          Contact email address:
                        </p>
                        <p
                          class="shift-info-entry"
                        />
                      </div>
                      <br />
                      <div
                        class="shift-info"
                      >
                        <p
                          class="shift-info-label"
                        >
                          Start time:
                        </p>
                        <p
                          class="shift-info-entry"
                        />
                      </div>
                      <br />
                      <div
                        class="shift-info"
                      >
                        <p
                          class="shift-info-label"
                        >
                          End time:
                        </p>
                        <p
                          class="shift-info-entry"
                        />
                      </div>
                      <br />
                      <section
                        id="toggle-popup-state"
                      >
                        <button
                          class="custom-button"
                          id="toggle-popup-content"
                        >
                          Request shift swap
                        </button>
                        <button
                          class="custom-button"
                          id="toggle-emergency-popup-content"
                        >
                          Request emergency cover
                        </button>
                      </section>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "shiftInfo": Object {
                              "end": Object {
                                "toLocaleString": [Function],
                              },
                              "start": Object {
                                "toLocaleString": [Function],
                              },
                              "userId": 1,
                            },
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "shiftInfo": Object {
                              "end": Object {
                                "toLocaleString": [Function],
                              },
                              "start": Object {
                                "toLocaleString": [Function],
                              },
                              "userId": 1,
                            },
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "shiftInfo": Object {
                        "end": Object {
                          "toLocaleString": [Function],
                        },
                        "start": Object {
                          "toLocaleString": [Function],
                        },
                        "userId": 1,
                      },
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    id="shift-popup"
                  >
                    <h3
                      class="popup-title"
                    >
                      Shift Information
                    </h3>
                    <br />
                    <div
                      class="shift-info"
                    >
                      <p
                        class="shift-info-label"
                      >
                        Employee name:
                      </p>
                      <p
                        class="shift-info-entry"
                      />
                    </div>
                    <br />
                    <div
                      class="shift-info"
                    >
                      <p
                        class="shift-info-label"
                      >
                        Contact email address:
                      </p>
                      <p
                        class="shift-info-entry"
                      />
                    </div>
                    <br />
                    <div
                      class="shift-info"
                    >
                      <p
                        class="shift-info-label"
                      >
                        Start time:
                      </p>
                      <p
                        class="shift-info-entry"
                      />
                    </div>
                    <br />
                    <div
                      class="shift-info"
                    >
                      <p
                        class="shift-info-label"
                      >
                        End time:
                      </p>
                      <p
                        class="shift-info-entry"
                      />
                    </div>
                    <br />
                    <section
                      id="toggle-popup-state"
                    >
                      <button
                        class="custom-button"
                        id="toggle-popup-content"
                      >
                        Request shift swap
                      </button>
                      <button
                        class="custom-button"
                        id="toggle-emergency-popup-content"
                      >
                        Request emergency cover
                      </button>
                    </section>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "shiftInfo": Object {
                          "end": Object {
                            "toLocaleString": [Function],
                          },
                          "start": Object {
                            "toLocaleString": [Function],
                          },
                          "userId": 1,
                        },
                      }
                    }
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "shiftInfo": Object {
                  "end": Object {
                    "toLocaleString": [Function],
                  },
                  "start": Object {
                    "toLocaleString": [Function],
                  },
                  "userId": 1,
                },
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 1073741823,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      id="shift-popup"
                    >
                      <h3
                        class="popup-title"
                      >
                        Shift Information
                      </h3>
                      <br />
                      <div
                        class="shift-info"
                      >
                        <p
                          class="shift-info-label"
                        >
                          Employee name:
                        </p>
                        <p
                          class="shift-info-entry"
                        />
                      </div>
                      <br />
                      <div
                        class="shift-info"
                      >
                        <p
                          class="shift-info-label"
                        >
                          Contact email address:
                        </p>
                        <p
                          class="shift-info-entry"
                        />
                      </div>
                      <br />
                      <div
                        class="shift-info"
                      >
                        <p
                          class="shift-info-label"
                        >
                          Start time:
                        </p>
                        <p
                          class="shift-info-entry"
                        />
                      </div>
                      <br />
                      <div
                        class="shift-info"
                      >
                        <p
                          class="shift-info-label"
                        >
                          End time:
                        </p>
                        <p
                          class="shift-info-entry"
                        />
                      </div>
                      <br />
                      <section
                        id="toggle-popup-state"
                      >
                        <button
                          class="custom-button"
                          id="toggle-popup-content"
                        >
                          Request shift swap
                        </button>
                        <button
                          class="custom-button"
                          id="toggle-emergency-popup-content"
                        >
                          Request emergency cover
                        </button>
                      </section>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "shiftInfo": Object {
                              "end": Object {
                                "toLocaleString": [Function],
                              },
                              "start": Object {
                                "toLocaleString": [Function],
                              },
                              "userId": 1,
                            },
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "shiftInfo": Object {
                              "end": Object {
                                "toLocaleString": [Function],
                              },
                              "start": Object {
                                "toLocaleString": [Function],
                              },
                              "userId": 1,
                            },
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "shiftInfo": Object {
                        "end": Object {
                          "toLocaleString": [Function],
                        },
                        "start": Object {
                          "toLocaleString": [Function],
                        },
                        "userId": 1,
                      },
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    id="shift-popup"
                  >
                    <h3
                      class="popup-title"
                    >
                      Shift Information
                    </h3>
                    <br />
                    <div
                      class="shift-info"
                    >
                      <p
                        class="shift-info-label"
                      >
                        Employee name:
                      </p>
                      <p
                        class="shift-info-entry"
                      />
                    </div>
                    <br />
                    <div
                      class="shift-info"
                    >
                      <p
                        class="shift-info-label"
                      >
                        Contact email address:
                      </p>
                      <p
                        class="shift-info-entry"
                      />
                    </div>
                    <br />
                    <div
                      class="shift-info"
                    >
                      <p
                        class="shift-info-label"
                      >
                        Start time:
                      </p>
                      <p
                        class="shift-info-entry"
                      />
                    </div>
                    <br />
                    <div
                      class="shift-info"
                    >
                      <p
                        class="shift-info-label"
                      >
                        End time:
                      </p>
                      <p
                        class="shift-info-entry"
                      />
                    </div>
                    <br />
                    <section
                      id="toggle-popup-state"
                    >
                      <button
                        class="custom-button"
                        id="toggle-popup-content"
                      >
                        Request shift swap
                      </button>
                      <button
                        class="custom-button"
                        id="toggle-emergency-popup-content"
                      >
                        Request emergency cover
                      </button>
                    </section>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "shiftInfo": Object {
                          "end": Object {
                            "toLocaleString": [Function],
                          },
                          "start": Object {
                            "toLocaleString": [Function],
                          },
                          "userId": 1,
                        },
                      }
                    }
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "shiftInfo": Object {
                    "end": Object {
                      "toLocaleString": [Function],
                    },
                    "start": Object {
                      "toLocaleString": [Function],
                    },
                    "userId": 1,
                  },
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "shiftInfo": Object {
                    "end": Object {
                      "toLocaleString": [Function],
                    },
                    "start": Object {
                      "toLocaleString": [Function],
                    },
                    "userId": 1,
                  },
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": Object {
            "baseState": Object {
              "formatEnd": undefined,
              "formatStart": undefined,
              "showingEmergencyForm": false,
              "showingRequestForm": false,
            },
            "firstCapturedEffect": null,
            "firstCapturedUpdate": null,
            "firstEffect": null,
            "firstUpdate": null,
            "lastCapturedEffect": null,
            "lastCapturedUpdate": null,
            "lastEffect": null,
            "lastUpdate": null,
          },
        },
        "_reactInternalInstance": Object {},
        "changeState": [Function],
        "context": Object {},
        "emergencyRequest": [Function],
        "formatEmergencyRequest": [Function],
        "props": Object {
          "shiftInfo": Object {
            "end": Object {
              "toLocaleString": [Function],
            },
            "start": Object {
              "toLocaleString": [Function],
            },
            "userId": 1,
          },
        },
        "refs": Object {},
        "state": Object {
          "formatEnd": undefined,
          "formatStart": undefined,
          "showingEmergencyForm": false,
          "showingRequestForm": false,
        },
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "shiftInfo": Object {
          "end": Object {
            "toLocaleString": [Function],
          },
          "start": Object {
            "toLocaleString": [Function],
          },
          "userId": 1,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": <div
          id="shift-popup"
        >
          <h3
            class="popup-title"
          >
            Shift Information
          </h3>
          <br />
          <div
            class="shift-info"
          >
            <p
              class="shift-info-label"
            >
              Employee name:
            </p>
            <p
              class="shift-info-entry"
            />
          </div>
          <br />
          <div
            class="shift-info"
          >
            <p
              class="shift-info-label"
            >
              Contact email address:
            </p>
            <p
              class="shift-info-entry"
            />
          </div>
          <br />
          <div
            class="shift-info"
          >
            <p
              class="shift-info-label"
            >
              Start time:
            </p>
            <p
              class="shift-info-entry"
            />
          </div>
          <br />
          <div
            class="shift-info"
          >
            <p
              class="shift-info-label"
            >
              End time:
            </p>
            <p
              class="shift-info-entry"
            />
          </div>
          <br />
          <section
            id="toggle-popup-state"
          >
            <button
              class="custom-button"
              id="toggle-popup-content"
            >
              Request shift swap
            </button>
            <button
              class="custom-button"
              id="toggle-emergency-popup-content"
            >
              Request emergency cover
            </button>
          </section>
        </div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h3
              className="popup-title"
            >
              Shift Information
            </h3>,
            <br />,
            <div
              className="shift-info"
            >
              <p
                className="shift-info-label"
              >
                Employee name:
              </p>
              <p
                className="shift-info-entry"
              />
            </div>,
            <br />,
            <div
              className="shift-info"
            >
              <p
                className="shift-info-label"
              >
                Contact email address:
              </p>
              <p
                className="shift-info-entry"
              />
            </div>,
            <br />,
            <div
              className="shift-info"
            >
              <p
                className="shift-info-label"
              >
                Start time:
              </p>
              <p
                className="shift-info-entry"
              />
            </div>,
            <br />,
            <div
              className="shift-info"
            >
              <p
                className="shift-info-label"
              >
                End time:
              </p>
              <p
                className="shift-info-entry"
              />
            </div>,
            <br />,
            <section
              id="toggle-popup-state"
            >
              <button
                className="custom-button"
                id="toggle-popup-content"
                onClick={[Function]}
              >
                Request shift swap
              </button>
              <button
                className="custom-button"
                id="toggle-emergency-popup-content"
                onClick={[Function]}
              >
                Request emergency cover
              </button>
            </section>,
          ],
          "id": "shift-popup",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <h3
              class="popup-title"
            >
              Shift Information
            </h3>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Shift Information",
              "className": "popup-title",
            },
            "ref": null,
            "rendered": Array [
              "Shift Information",
            ],
            "type": "h3",
          },
          Object {
            "instance": <br />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": Array [
              undefined,
            ],
            "type": "br",
          },
          Object {
            "instance": <div
              class="shift-info"
            >
              <p
                class="shift-info-label"
              >
                Employee name:
              </p>
              <p
                class="shift-info-entry"
              />
            </div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="shift-info-label"
                >
                  Employee name:
                </p>,
                <p
                  className="shift-info-entry"
                />,
              ],
              "className": "shift-info",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <p
                  class="shift-info-label"
                >
                  Employee name:
                </p>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Employee name:",
                  "className": "shift-info-label",
                },
                "ref": null,
                "rendered": Array [
                  "Employee name:",
                ],
                "type": "p",
              },
              Object {
                "instance": <p
                  class="shift-info-entry"
                />,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "shift-info-entry",
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                ],
                "type": "p",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": <br />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": Array [
              undefined,
            ],
            "type": "br",
          },
          Object {
            "instance": <div
              class="shift-info"
            >
              <p
                class="shift-info-label"
              >
                Contact email address:
              </p>
              <p
                class="shift-info-entry"
              />
            </div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="shift-info-label"
                >
                  Contact email address:
                </p>,
                <p
                  className="shift-info-entry"
                />,
              ],
              "className": "shift-info",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <p
                  class="shift-info-label"
                >
                  Contact email address:
                </p>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Contact email address:",
                  "className": "shift-info-label",
                },
                "ref": null,
                "rendered": Array [
                  "Contact email address:",
                ],
                "type": "p",
              },
              Object {
                "instance": <p
                  class="shift-info-entry"
                />,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "shift-info-entry",
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                ],
                "type": "p",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": <br />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": Array [
              undefined,
            ],
            "type": "br",
          },
          Object {
            "instance": <div
              class="shift-info"
            >
              <p
                class="shift-info-label"
              >
                Start time:
              </p>
              <p
                class="shift-info-entry"
              />
            </div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="shift-info-label"
                >
                  Start time:
                </p>,
                <p
                  className="shift-info-entry"
                />,
              ],
              "className": "shift-info",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <p
                  class="shift-info-label"
                >
                  Start time:
                </p>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Start time:",
                  "className": "shift-info-label",
                },
                "ref": null,
                "rendered": Array [
                  "Start time:",
                ],
                "type": "p",
              },
              Object {
                "instance": <p
                  class="shift-info-entry"
                />,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "shift-info-entry",
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                ],
                "type": "p",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": <br />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": Array [
              undefined,
            ],
            "type": "br",
          },
          Object {
            "instance": <div
              class="shift-info"
            >
              <p
                class="shift-info-label"
              >
                End time:
              </p>
              <p
                class="shift-info-entry"
              />
            </div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="shift-info-label"
                >
                  End time:
                </p>,
                <p
                  className="shift-info-entry"
                />,
              ],
              "className": "shift-info",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <p
                  class="shift-info-label"
                >
                  End time:
                </p>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "End time:",
                  "className": "shift-info-label",
                },
                "ref": null,
                "rendered": Array [
                  "End time:",
                ],
                "type": "p",
              },
              Object {
                "instance": <p
                  class="shift-info-entry"
                />,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "shift-info-entry",
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                ],
                "type": "p",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": <br />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": Array [
              undefined,
            ],
            "type": "br",
          },
          Object {
            "instance": <section
              id="toggle-popup-state"
            >
              <button
                class="custom-button"
                id="toggle-popup-content"
              >
                Request shift swap
              </button>
              <button
                class="custom-button"
                id="toggle-emergency-popup-content"
              >
                Request emergency cover
              </button>
            </section>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <button
                  className="custom-button"
                  id="toggle-popup-content"
                  onClick={[Function]}
                >
                  Request shift swap
                </button>,
                <button
                  className="custom-button"
                  id="toggle-emergency-popup-content"
                  onClick={[Function]}
                >
                  Request emergency cover
                </button>,
              ],
              "id": "toggle-popup-state",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <button
                  class="custom-button"
                  id="toggle-popup-content"
                >
                  Request shift swap
                </button>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Request shift swap",
                  "className": "custom-button",
                  "id": "toggle-popup-content",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Array [
                  "Request shift swap",
                ],
                "type": "button",
              },
              Object {
                "instance": <button
                  class="custom-button"
                  id="toggle-emergency-popup-content"
                >
                  Request emergency cover
                </button>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Request emergency cover",
                  "className": "custom-button",
                  "id": "toggle-emergency-popup-content",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Array [
                  "Request emergency cover",
                ],
                "type": "button",
              },
            ],
            "type": "section",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
